# YAML to configure the web
---

- hosts: app
  gather_facts: yes
  become: true

  tasks:

  - name: Let's clear the path
    file:
      state: absent
      path: /home/ubuntu/app

  - name: Cloning the repository
    ansible.builtin.git:
      repo: https://github.com/alfonso-torres/eng84_CI_CD_Jenkins.git
      dest: /home/ubuntu/app
      clone: yes

  - name: Permissions to execute the provision file
    shell:
      cmd: chmod +x /home/ubuntu/app/provision_app.sh

  - name: updating
    shell:
      cmd: apt-get update -y

  - name: upgrading
    shell:
      cmd: apt-get upgrade -y

  - name: Installing Nginx
    apt: pkg=nginx state=present

  - name: Installing Python Properties
    apt: pkg=python-software-properties state=present

  - name: permissions to execute the provision file
    shell:
      cmd: chmod +x /home/ubuntu/app/provision_app.sh

  - name: run provision script for the app
    shell:
      cmd: bash /home/ubuntu/app/provision_app.sh

  - name: Downloading nodejs-6.x
    get_url:
      url: https://deb.nodesource.com/setup_6.x
      dest: /home/ubuntu/nodejsSetup.sh

  - name: Preparing the nodejs
    shell:
      cmd: bash /home/ubuntu/nodejsSetup.sh

  - name: Installing nodejs
    shell:
      cmd: npm install -g pm2

  - name: Restarting nginx
    service: name=nginx state=restarted enabled=yes

  - name: export variable
    lineinfile:
      path: /home/ubuntu/.bashrc
      line: export DB_HOST=mongodb://private_ip_db:27017/posts

  - name: re-start bashrc
    shell:
      cmd: runuser -l ubuntu -c 'source ~/.bashrc'

  - name: reboot host and wait for it to restart
    reboot:
      msg: "Reboot initiaded by Ansible."
      connect_timeout: 10
      reboot_timeout: 900
      pre_reboot_delay: 0
      post_reboot_delay: 30
      test_command: printenv

  - name: npm installing
    npm:
      path: /home/ubuntu/app/app

  - name: running seedjs
    shell:
      cmd: nodejs /home/ubuntu/app/app/seeds/seed.js

  - name: creating service file
    shell:
      cmd: mv /home/ubuntu/app/webapp.service /etc/systemd/system/webapp.service

  - name: reloading daemon
    shell:
      cmd: systemctl daemon-reload

  - name: enabling the service
    service: name=webapp state=started enabled=yes